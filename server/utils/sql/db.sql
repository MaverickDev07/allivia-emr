CREATE TABLE IF NOT EXISTS projects (
  id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  name text NOT NULL CHECK (name <> ''),
  priority integer NOT NULL,
  description text,
  deliverydate date NOT NULL
);

CREATE TABLE IF NOT EXISTS tasks (
  id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  name text NOT NULL CHECK (name <> ''),
  done BOOLEAN,
  projectid INTEGER REFERENCES projects(id)
);

--CONNECT DATABASE
psql -U <postgre username> -d <dbname>
psql -U postgres -d postgres

--List tables
\dt


-- WEB ALLIVIA
CREATE TABLE IF NOT EXISTS web_rol (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  nombre text NOT NULL CHECK (nombre <> '')
);

CREATE TABLE IF NOT EXISTS web_usuario (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  nombre text NOT NULL CHECK (nombre <> ''),
  email text NOT NULL CHECK (email <> ''),
  password text NOT NULL CHECK (password <> ''),
  rol_id bigint REFERENCES web_rol(id)
);

CREATE TABLE IF NOT EXISTS web_permisos (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  nombre text NOT NULL CHECK (nombre <> '')
);

CREATE TABLE IF NOT EXISTS web_permisos_rol (
  rol_id bigint REFERENCES web_rol (id) ON UPDATE CASCADE ON DELETE CASCADE,
  permisos_id bigint REFERENCES web_permisos (id) ON UPDATE CASCADE,
  CONSTRAINT web_permisos_rol_pkey PRIMARY KEY (rol_id, permisos_id)
);

-- ADD file
ALTER TABLE IF EXISTS public.app_fichalaboratorios
    ADD COLUMN IF NOT EXISTS id_archivolaboratorios bigint REFERENCES app_archivolaboratorios(id);

ALTER TABLE IF EXISTS public.app_laboratorios_paciente
    ADD COLUMN IF NOT EXISTS id_archivolaboratorios bigint REFERENCES app_archivolaboratorios(id);
